package com.example.invoiceservice.invoiceservice.controllers;

import com.example.invoiceservice.invoiceservice.models.Invoice;
import com.example.invoiceservice.invoiceservice.repositories.InvoiceRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;


@Controller // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class InvoiceController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private InvoiceRepository invoiceRepository;

    @PostMapping(path="/add") // Map ONLY POST Requests
    public @ResponseBody String addNewInvoice (@RequestParam Integer userId
            , @RequestParam Integer realEstateId) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Invoice inv = new Invoice();
        inv.setUserId(userId);
        inv.setRealEstateId(realEstateId);
        invoiceRepository.save(inv);
        return "Saved";
    }

    @GetMapping(path="/all")
    public @ResponseBody Iterable<Invoice> getAllInvoices() {
        // This returns a JSON or XML with the users
        return invoiceRepository.findAll();
    }
}